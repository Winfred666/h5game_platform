version: "3"
services:
  frontend:
    image: h5game_platform-frontend:v2.0
    build:
      context: .
      dockerfile: dockerfile
      args:
        BUILD_ENV: "production"
    ports:
      - "${FRONT_PORT}:3000"
    volumes:
      - shared_data:/data  # Share the same volume
    environment:
      - DATABASE_URL=file:/data/db/prod.db  # Add this for runtime
      - NODE_ENV=production
    networks:
      - h5game_platform_net
    # Copy built database to volume at startup, then start app
    command: >
      sh -c "
        mkdir -p /data/db &&
        if [ ! -f /data/db/prod.db ]; then 
          echo 'Copying database from build to volume...' &&
          cp /app/temp_db/prod.db /data/db/prod.db && 
          echo 'Database copied successfully'; 
        else 
          echo 'Database already exists, skipping copy'; 
        fi &&
        echo 'Starting application...' &&
        node server.js
      "

  minio:
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z-cpuv1
    container_name: h5game_platform_minio
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_ACCESS_KEY}"
      MINIO_ROOT_PASSWORD: "${MINIO_SECRET_KEY}"
    volumes:
      - shared_data:/data  # Same volume, MinIO uses /data/minio
    command: server /data/minio --console-address ":9001"  # MinIO in subfolder
    networks:
      - h5game_platform_net

volumes:
  shared_data:  # Single shared volume

networks:
  h5game_platform_net:
    driver: bridge