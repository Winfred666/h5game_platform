version: "3"

services:
  backend:
    image: h5game_platform-backend:v1.0
    build:
      context: ./backend
      dockerfile: Dockerfile  # 文件名标准化
    ports:
      - "${BACK_PORT}:8848"
    env_file:
      - .env
    depends_on:
      - postgres  # 简化依赖
    networks:
      - h5game_platform_net

  frontend:
    image: h5game_platform-frontend:v1.0
    build:
      context: ./site
      dockerfile: Dockerfile  # 文件名标准化
      args:
        NEXT_PUBLIC_URL: "${PUBLIC_FRONT_URL}"
        NEXT_PUBLIC_SERVER_URL: "${PUBLIC_BACK_URL}"
        SERVER_URL: "http://backend:8848"
        BUILD_ENV: "production"
    ports:
      - "${FRONT_PORT}:3000"
    depends_on:
      - backend  # 简化依赖
    networks:
      - h5game_platform_net

  minio:
    image: minio/minio
    container_name: h5game_platform_minio
    ports:
      - "${MINIO_PORT}:9000"
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - h5game_platform_net

  postgres:
    image: postgres:16-alpine
    container_name: h5game_platform_postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - h5game_platform_net

volumes:
  minio_data:
  postgres_data:

networks:
  h5game_platform_net:
    driver: bridge